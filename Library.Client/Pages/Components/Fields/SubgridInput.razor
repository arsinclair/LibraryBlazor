@namespace Library.Client.Components.Fields
@inject NavigationManager NavigationManager
@inject IMetadataRepository metadataClient

<table class="table table-striped table-sm table-bordered caption-top">
    <caption>@FieldDefinition.DisplayName</caption>
    <thead>
        <tr>
            @foreach (string columnName in columns)
            {
                <th>@columnName</th>
            }
        </tr>
    </thead>
    <tbody>
        @if (internalValue == null || internalValue.Count == 0)
        {
            <tr>
                <td colspan="@columns.Count">No records found.</td>
            </tr>
        }
        else
        {
            foreach (Entity entity in internalValue)
            {
                <tr class="table-record" @onclick=@(() => NavigationManager.NavigateTo($"/cms/{entity.LogicalName}/{entity.Id}/edit"))>
                    @foreach (string fieldName in columns)
                    {
                        <td>@(entity.Contains(fieldName) ? entity[fieldName] : string.Empty)</td>
                    }
                </tr>
            }
        }
    </tbody>
</table>
@if (internalValue != null)
{
    <p>Total Records: @internalValue.Count</p>
}

@code {
    [Parameter]
    public SysField FieldDefinition { get; set; }

    private List<string> columns;

    protected override void OnParametersSet()
    {
        columns = metadataClient.GetEntityCollectionViewColumns(FieldDefinition.Id);
    }

    private List<Entity> internalValue
    {
        get => Output as List<Entity>;
        set
        {
            OutputChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public object Output { get; set; }

    [Parameter]
    public EventCallback<object> OutputChanged { get; set; }
}
