@page "/CMS/{entityName}/New"
@inject IMetadataRepository metadataClient
@inject IEntityRepository connection
@using Attribute = DataAccessLibrary.Attribute
@inject NavigationManager NavigationManager

<button class="btn btn-outline-secondary mt-2" @onclick=@(() => NavigationManager.NavigateTo($"/CMS/{entityName}"))><i class="fas fa-arrow-left mr-5"></i>Back</button>

<h2>Create new @entityName</h2>

<form class="row g-1">
    <EntityAttributes Attributes="newEntityAttributes" FieldDefinitions="entityFields" />
    <div class="col-auto">
        <button type="button" class="btn btn-info" @onclick="CreateEntity">Save @entityName</button>
    </div>
</form>

<div class="alert m-2 @alertClass" role="alert">@alertMessage</div>
<button class="btn btn-success @isHidden" @onclick=@(() => NavigationManager.NavigateTo($"/CMS/{entityName}/New", forceLoad: true))><i class="fas fa-plus mr-2"></i>Create Another</button>

@code {
    private List<Attribute> newEntityAttributes = new List<DataAccessLibrary.Attribute>();

    [Parameter]
    public string entityName { get; set; }

    private List<SysField> entityFields;
    private string[] columns;
    private string alertClass = "hidden alert-success";
    private string isHidden = "hidden";
    private string alertMessage = "";

    protected override void OnInitialized()
    {
        columns = metadataClient.GetDefaultViewLayout(entityName).Columns.Split(",");
        entityFields = metadataClient.GetFields(entityName);

        foreach (string column in columns)
        {
            SysField fieldDefinition = entityFields.Single(x => string.Equals(x.Name, column, StringComparison.OrdinalIgnoreCase));
            newEntityAttributes.Add(new Attribute(fieldDefinition.Name));
        }
    }

    private void CreateEntity()
    {
        Entity entity = new Entity(entityName);
        foreach (Attribute attr in newEntityAttributes)
        {
            entity[attr.Key] = attr.Value;
        }

        try
        {
            Guid newId = connection.Create(entity);
            if (newId != Guid.Empty)
            {
                alertClass = "alert-success";
                alertMessage = $"New {entityName} has been created.";
                isHidden = "";
            }
            else
            {
                alertClass = "alert-danger";
                alertMessage = "Error";
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
}