@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IMetadataRepository metadataClient

@{
    if (metadataClient.IsProductionEnvironment() == false)
    {
        <div id="non-production-header">Non-production mode</div>
    }
}

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="page-header auth">
        <div class="page-header-content">
            <AuthorizeView>
                <Authorized>
                    <div class="page-header-item">
                        <a href="Identity/Account/Manage">@context.User.Identity.Name</a>
                    </div>
                    <div class="page-header-item">
                        <form method="post" asp-area="Identity" asp-page="/Account/Logout" action="Identity/Account/LogOut">
                            <button type="submit" class="nav-link btn btn-link">Log out</button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="page-header-item">
                        <a href="Identity/Account/Register">Register</a>
                    </div>
                    <div class="page-header-item">
                        <a href="Identity/Account/Login">Log in</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
            <div class="page-header-item">
                <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            </div>
        </div>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            string redirectUrl = Uri.EscapeDataString(NavigationManager.ToBaseRelativePath(NavigationManager.Uri));
            if (redirectUrl != string.Empty && redirectUrl != "/")
            {
                redirectUrl = "?returnUrl=" + redirectUrl;
            }
            NavigationManager.NavigateTo($"Identity/Account/Login{redirectUrl}");
        }
    }
}